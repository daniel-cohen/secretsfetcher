name: Release
env:
  CI: true
on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build_and_test:
    name: build and test
    runs-on: ubuntu-18.04
    steps:
      - name: Golang setup
        uses: actions/setup-go@v1
        with:
          go-version: 1.15.10
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: vet
        run: go vet -v ./...

      - name: unit test
        run: go test -cover -race -v ./...
  release:
    name: release
    runs-on: ubuntu-18.04
    needs: build_and_test
    env:
      SERVICE: secretsfetcher
    steps:
      - name: Golang setup
        uses: actions/setup-go@v1
        with:
          go-version: 1.15.10
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Vendor
        run: |
          go mod tidy
          go mod vendor
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PAT}}

      - name: Build & Release
        run: |
          VERSION="v$(date -u "+%y%m%d-%H%M%S")-${GITHUB_SHA::7}"
          IMAGE_NAME="danielco/$SERVICE"
          IMAGE_NAME_VERSION="$IMAGE_NAME:$VERSION"
          IMAGE_NAME_LATEST="$IMAGE_NAME:latest"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

          # build the normal image
          docker buildx create \
            --name multi \
            --driver docker-container \
            --bootstrap
          docker buildx build \
            --builder multi \
            --platform linux/amd64,linux/arm64 \
            --build-arg "VERSION=$VERSION" \
            --tag $IMAGE_NAME_VERSION \
            --tag $IMAGE_NAME_LATEST \
            --push .
      - name: Tag Release
        run: |
          REMOTE="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git config --local user.email "${GITHUB_ACTOR}@github.com"
          git config --local user.name "${GITHUB_ACTOR}"
          git tag -f -a $VERSION -m "Release ${VERSION}"
          git push ${REMOTE} -f --tags
